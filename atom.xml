<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Another Dogged Contender</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https:/fangchichen.github.io/"/>
  <updated>2018-08-07T10:27:09.018Z</updated>
  <id>https:/fangchichen.github.io/</id>
  
  <author>
    <name>fangchichen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>supervisor配置文件</title>
    <link href="https:/fangchichen.github.io/2018/08/07/supervisor%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>https:/fangchichen.github.io/2018/08/07/supervisor配置文件/</id>
    <published>2018-08-07T06:46:50.000Z</published>
    <updated>2018-08-07T10:27:09.018Z</updated>
    
    <content type="html"><![CDATA[<p>近期在看supervisor相关的知识，这里简单的对配置文件里的一些参数做些简单的翻译，加强自己的记忆的同时，方便后续查看！</p><a id="more"></a><p>##配置文件</p><p>一般配置文件都命名为supervisord.conf，且这个文件为supervisord和supervisorctl共用。如果启动时没有使用-c选项，那么就会按照如下顺序查找，使用第一个找到的配置文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> $CWD/supervisord.conf</span><br><span class="line"><span class="number">2.</span> $CWD/etc/supervisord.conf</span><br><span class="line"><span class="number">3.</span> /etc/supervisord.conf</span><br><span class="line"><span class="number">4.</span> /etc/supervisor/supervisord.conf (since Supervisor <span class="number">3.3</span><span class="number">.0</span>)</span><br><span class="line"><span class="number">5.</span> ../etc/supervisord.conf (Relative to the executable)</span><br><span class="line"><span class="number">6.</span> ../supervisord.conf (Relative to the executable)</span><br></pre></td></tr></table></figure><h2 id="unix-http-server"><a href="#unix-http-server" class="headerlink" title="[unix_http_server]"></a><code>[unix_http_server]</code></h2><p>这部分的配置参数用于HTTP服务器监听一个UNIX域socket的。允许的配置参数如下。</p><p><code>file</code></p><p>存放UNIX域socket文件的路径（<code>/tmp/supervisord.sock</code>），supervisor通过它来监听HTTP/XML_RPC请求。supervisorctl通过这个端口用XML-RPC来与supervisord通信。该选项可以使用<code>%(here)s</code>值，表示supervisord配置文件所在位置。</p><p>默认值：None</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>chmod</code></p><p>socket文件在supervisor启动时的权限值。</p><p>默认值：0700</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>chown</code></p><p>改变socket文件的所有者和所属群组。</p><p>默认值：启动supervisord的用户名及其群组</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>username</code></p><p>用于HTTP服务器认证的用户名。</p><p>默认值：无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>password</code></p><p>用于HTTP服务器认证的密码，可以是明文，也可以SHA-1密文（以<code>{SHA}</code>开头）</p><p>默认值：无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>[unix_http_server]</code>简单实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[unix_http_server]</span><br><span class="line">file = /tmp/supervisor.sock</span><br><span class="line">chmod = <span class="number">0777</span></span><br><span class="line">chown= nobody:nogroup</span><br><span class="line">username = user</span><br><span class="line">password = <span class="number">123</span></span><br></pre></td></tr></table></figure><h2 id="inet-http-server"><a href="#inet-http-server" class="headerlink" title="[inet_http_server]"></a><code>[inet_http_server]</code></h2><p>这部分的配置参数用于HTTP服务器监听一个TCP socket的。允许的配置参数如下。</p><p><code>port</code></p><p>一个TCP主机：端口值（如，127.0.0.1:9001），supervisor通过它来监听HTTP/XML_RPC请求。supervisorctl通过这个端口用XML-RPC来与supervisord通信。</p><p>默认值：无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>username</code></p><p>用于HTTP服务器认证的用户名。</p><p>默认值：无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>password</code></p><p>用于HTTP服务器认证的密码，可以是明文，也可以SHA-1密文（以<code>{SHA}</code>开头）</p><p>默认值：无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>[inet_http_server]</code>简单实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[inet_http_server]</span><br><span class="line">port = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">9001</span></span><br><span class="line">username = user</span><br><span class="line">password = <span class="number">123</span></span><br></pre></td></tr></table></figure><h2 id="supervisord"><a href="#supervisord" class="headerlink" title="[supervisord]"></a><code>[supervisord]</code></h2><p>与supervisord进程相关的全局配置，具体参数如下</p><p><code>logfile</code></p><p>supervisord进程活动日志存放路径。使用<code>%(here)s</code>表示配置文件所在路径。</p><p>默认值：<code>$CWD/supervisord.log</code></p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>logfile_maxbytes</code></p><p>logfile文件大小最大值，设为0表示不限制大小。</p><p>默认值：50MB</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>logfile_backups</code></p><p>最多保留logfile文件数目，设为0表示不保存。</p><p>默认值：10</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>loglevel</code></p><p>日志级别，值为<code>critical</code>, <code>error</code>, <code>warn</code>, <code>info</code>, <code>debug</code>, <code>trace</code>，<code>blather</code>中的一个。</p><p>默认值：info</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>pidfile</code></p><p>supervisord保存pid文件路径。使用<code>%(here)s</code>表示配置文件所在路径。</p><p>默认值：<code>$CWD/supervisord.pid</code></p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>umask</code></p><p>supervisord进程的umask</p><p>默认值：<code>022</code></p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>nodaemon</code></p><p>值为true时，supervisord将以非后台程序运行。</p><p>默认值：false</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>minfds</code></p><p>supervisord启动时所需的最小文件描述符个数。</p><p>默认值：1024</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>minprocs</code></p><p>supervisord启动时所需的最小进程描述符个数。</p><p>默认值：200</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>nocleanup</code></p><p>避免supervisord在启动时清理任何已经存在的<code>AUTO</code>子log文件。</p><p>默认值：false</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>childlogdir</code></p><p><code>AUTO</code>子log文件存储路径，使用<code>%(here)s</code>表示配置文件所在路径。</p><p>默认值：Python的<code>tempfile.get_tempdir()</code></p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>user</code></p><p>Instruct <strong>supervisord</strong> to switch users to this UNIX user account before doing any meaningful processing。</p><p>默认值：不切换用户</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>directory</code></p><p>当supervisors在后台运行时，切换到这个路径。</p><p>默认值：不切换路径</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>strip_ansi</code></p><p>去掉子日志文件中所有ANSI escape sequences。</p><p>默认值：不切换用户</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>environment</code></p><p>形如 <code>KEY=&quot;val&quot;,KEY2=&quot;val2&quot;</code> 的键值对列表，用于替换supervisord进程环境（包括子进程环境）。</p><p>默认值：无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>identifier</code></p><p>supervisor进程识别码，用于RPC接口。</p><p>默认值：supervisor</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>[supervisord]</code>简单实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[supervisord]</span><br><span class="line">logfile = /tmp/supervisord.log</span><br><span class="line">logfile_maxbytes = <span class="number">50</span>MB</span><br><span class="line">logfile_backups=<span class="number">10</span></span><br><span class="line">loglevel = info</span><br><span class="line">pidfile = /tmp/supervisord.pid</span><br><span class="line">nodaemon = false</span><br><span class="line">minfds = <span class="number">1024</span></span><br><span class="line">minprocs = <span class="number">200</span></span><br><span class="line">umask = <span class="number">022</span></span><br><span class="line">user = chrism</span><br><span class="line">identifier = supervisor</span><br><span class="line">directory = /tmp</span><br><span class="line">nocleanup = true</span><br><span class="line">childlogdir = /tmp</span><br><span class="line">strip_ansi = false</span><br><span class="line">environment = KEY1=<span class="string">"value1"</span>,KEY2=<span class="string">"value2"</span></span><br></pre></td></tr></table></figure><h2 id="supervisorctl"><a href="#supervisorctl" class="headerlink" title="[supervisorctl]"></a><code>[supervisorctl]</code></h2><p>supervisorctl交互shell程序配置，具体如下</p><p><code>serverurl</code></p><p>supervisord服务器url。对于UNIX域socket，使用 <code>unix:///absolute/path/to/file.sock</code>.</p><p>默认值： <code>http://localhost:9001</code></p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>username</code></p><p>传给supervisord服务器的username，应该与supervisord服务器username一致。</p><p>默认值：无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>password</code></p><p>同上。</p><p>默认值： 无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>prompt</code></p><p>supervisorctl提示词。</p><p>默认值：supervisor</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>history_file</code></p><p>不懂有啥用。</p><p>默认值：无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>[supervisorctl]</code>简单实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[supervisorctl]</span><br><span class="line">serverurl = unix:///tmp/supervisor.sock</span><br><span class="line">username = chris</span><br><span class="line">password = <span class="number">123</span></span><br><span class="line">prompt = mysupervisor</span><br></pre></td></tr></table></figure><h2 id="program-x"><a href="#program-x" class="headerlink" title="[program:x]"></a><code>[program:x]</code></h2><p>必须包含程序名，可以用 <code>%(program_name)s</code> 来表示。可以有一个或多个次模块。模块内的参数如下</p><p><code>command</code></p><p>此程序启动时要执行的命令。可以是绝对路径 <code>/path/to/programname</code>，也可以是相对路径 <code>programname</code></p><p>默认值：无</p><p>是否必须：是</p><p>引入版本：3.0</p><p><code>process_name</code></p><p>程序名。</p><p>默认值： <code>%(program_name)s</code></p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>numprocs</code></p><p>进程数量，如果其值大于1，那么<code>process_name</code>必须包含<code>%(process_num)s</code> </p><p>默认值：1</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>numprocs_start</code></p><p><code>numprocs</code> 起始值。</p><p>默认值：0</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>priority</code></p><p>程序的相对优先级，越小越先启动越晚关闭。</p><p>默认值：999</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>autostart</code></p><p>为true时，程序可以自动重启。</p><p>默认值：true</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>startsecs</code></p><p>程序需要保持运行状态startsecs秒后，才会被认为是启动成功（进程从STARTING状态转为RUNNING状态）。设置为0时，表示不需要保持运行状态特定的秒数，我理解的就是，直接认为启动成功。</p><p>默认值：1</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>startretries</code></p><p>程序启动失败后，尝试重启的次数。若仍未成功，设置进程状态为FATAL。</p><p>默认值：3</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>autorestart</code></p><p>当进程在运行时，出现 <code>false</code>, <code>unexpected</code>,  <code>true</code>中一个时，尝试重新启动。为false时该进程不会自己重新启动；为unexpected时，当出现exitcodes定义以外的退出码时重新启动；为true时进程无条件重启。</p><p>默认值：unexpected</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>exitcodes</code></p><p>预期的退出码列表。</p><p>默认值：0，2</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>stopsignal</code></p><p>杀死进程的信号，可以为TERM, HUP, INT, QUIT, KILL, USR1, USR2中的一个。</p><p>默认值：TERM</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>stopwaitsecs</code></p><p>在程序收到stopsignal后，supervisord等待OS返回SIGCHLD的秒数。超出这个时间仍未收到SIGCHLD时，supervisord会尝试以SIGKILL信号杀死程序。</p><p>默认值：10</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>stopasgroup</code></p><p>为true时，supervisor会给进程组发送stop信号。</p><p>默认值：false</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>killasgroup</code></p><p>为true时，给进程组发送SIGKILL信号。</p><p>默认值：false</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>user</code></p><p>Instruct <strong>supervisord</strong> to use this UNIX user account as the account which runs the program. The user can only be switched if <strong>supervisord</strong> is run as the root user. If <strong>supervisord</strong> can’t switch to the specified user, the program will not be started.</p><p>默认值：不切换用户</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>redirect_stderr</code></p><p>为true时，进程的stderr会送回supervisord的stdout文件描述符。类似于 <code>/the/program 2&gt;&amp;1</code>。在 <code>[eventlistener:x]</code> 区域不要设置 <code>redirect_stderr=true</code>，Eventlisteners使用stdout和stdin与supervisord通信，如果stderr重定向了，stderr的输出会干扰eventlistener协议。</p><p>默认值：false</p><p>是否必须：否</p><p>引入版本：3.0，替换2.0的<code>log_stdout</code> 和 <code>log_stderr</code></p><p><code>stdout_logfile</code></p><p>将进程的stdout输出到此文件中，如果redirect_stderr为true，则将stderr也输出到此文件中。如果<code>stdout_logfile</code> 未设置或者设置为AUTO，supervisor会自动选择一个文件位置。如果设置为NONE，则不创建log文件。当supervisord重启时，AUTO log文件和其备份会被删除。注意，当rotation没有开启时，两个进程共享一个log文件会造成文件混乱。</p><p>默认值：<code>AUTO</code></p><p>是否必须：否</p><p>引入版本：3.0，替换2.0的<code>logfile</code></p><p><code>stdout_logfile_maxbytes</code></p><p>stdout_logfile最大值。</p><p>默认值：50MB</p><p>是否必须：否</p><p>引入版本：3.0，替换2.0的<code>logfile_maxbytes</code></p><p><code>stdout_logfile_backups</code></p><p>默认值：10</p><p>是否必须：否</p><p>引入版本：3.0，替换2.0的<code>logfile_backups</code></p><p><code>stdout_capture_maxbytes</code></p><p>stdout capture mode使用。</p><p>默认值：0</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>stdout_events_enabled</code></p><p>不懂。</p><p>默认值：0</p><p>是否必须：否</p><p>引入版本：3.0a7</p><p><code>stderr_logfile</code></p><p>默认值：<code>AYTO</code></p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>stderr_logfile_maxbytes</code></p><p>默认值：50MB</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>stderr_logfile_backups</code></p><p>默认值：10</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>stderr_capture_maxbytes</code></p><p>默认值：0</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>stderr_events_enabled</code></p><p>默认值：false</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>environment</code></p><p>见上。</p><p>默认值：无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>directory</code></p><p>默认值：无</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>umask</code></p><p>默认值：无，继承supervisor的</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>serverurl</code></p><p>默认值：AUTO</p><p>是否必须：否</p><p>引入版本：3.0</p><p><code>program:x</code>简单实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[program:cat]</span><br><span class="line">command=/bin/cat</span><br><span class="line">process_name=%(program_name)s</span><br><span class="line">numprocs=<span class="number">1</span></span><br><span class="line">directory=/tmp</span><br><span class="line">umask=<span class="number">022</span></span><br><span class="line">priority=<span class="number">999</span></span><br><span class="line">autostart=true</span><br><span class="line">autorestart=unexpected</span><br><span class="line">startsecs=<span class="number">10</span></span><br><span class="line">startretries=<span class="number">3</span></span><br><span class="line">exitcodes=<span class="number">0</span>,<span class="number">2</span></span><br><span class="line">stopsignal=TERM</span><br><span class="line">stopwaitsecs=<span class="number">10</span></span><br><span class="line">stopasgroup=false</span><br><span class="line">killasgroup=false</span><br><span class="line">user=chrism</span><br><span class="line">redirect_stderr=false</span><br><span class="line">stdout_logfile=/a/path</span><br><span class="line">stdout_logfile_maxbytes=<span class="number">1</span>MB</span><br><span class="line">stdout_logfile_backups=<span class="number">10</span></span><br><span class="line">stdout_capture_maxbytes=<span class="number">1</span>MB</span><br><span class="line">stdout_events_enabled=false</span><br><span class="line">stderr_logfile=/a/path</span><br><span class="line">stderr_logfile_maxbytes=<span class="number">1</span>MB</span><br><span class="line">stderr_logfile_backups=<span class="number">10</span></span><br><span class="line">stderr_capture_maxbytes=<span class="number">1</span>MB</span><br><span class="line">stderr_events_enabled=false</span><br><span class="line">environment=A=<span class="string">"1"</span>,B=<span class="string">"2"</span></span><br><span class="line">serverurl=AUTO</span><br></pre></td></tr></table></figure><h2 id="include"><a href="#include" class="headerlink" title="[include]"></a><code>[include]</code></h2><p>引入其他配置文件。只有supervisord用到，supervisorctl不用。</p><p><code>files</code></p><p>默认值：无</p><p>是否必须：是</p><p>引入版本：3.0</p><p><code>[include]</code>简单实例</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[include]</span><br><span class="line">files = /an/absolute/filename.conf /an/absolute/*.conf foo.conf config??.conf</span><br></pre></td></tr></table></figure><h2 id="group-x"><a href="#group-x" class="headerlink" title="[group:x]"></a><code>[group:x]</code></h2><p><code>[group:x]</code>简单实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[group:foo]</span><br><span class="line">programs=bar,baz</span><br><span class="line">priority=<span class="number">999</span></span><br></pre></td></tr></table></figure><h2 id="fcgi-program-x"><a href="#fcgi-program-x" class="headerlink" title="[fcgi-program:x]"></a><code>[fcgi-program:x]</code></h2><p><code>[fcgi-program:x]</code>简单实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[fcgi-program:fcgiprogramname]</span><br><span class="line">command=/usr/bin/example.fcgi</span><br><span class="line">socket=unix:///var/run/supervisor/%(program_name)s.sock</span><br><span class="line">socket_owner=chrism</span><br><span class="line">socket_mode=<span class="number">0700</span></span><br><span class="line">process_name=%(program_name)s_%(process_num)<span class="number">02</span>d</span><br><span class="line">numprocs=<span class="number">5</span></span><br><span class="line">directory=/tmp</span><br><span class="line">umask=<span class="number">022</span></span><br><span class="line">priority=<span class="number">999</span></span><br><span class="line">autostart=true</span><br><span class="line">autorestart=unexpected</span><br><span class="line">startsecs=<span class="number">1</span></span><br><span class="line">startretries=<span class="number">3</span></span><br><span class="line">exitcodes=<span class="number">0</span>,<span class="number">2</span></span><br><span class="line">stopsignal=QUIT</span><br><span class="line">stopasgroup=false</span><br><span class="line">killasgroup=false</span><br><span class="line">stopwaitsecs=<span class="number">10</span></span><br><span class="line">user=chrism</span><br><span class="line">redirect_stderr=true</span><br><span class="line">stdout_logfile=/a/path</span><br><span class="line">stdout_logfile_maxbytes=<span class="number">1</span>MB</span><br><span class="line">stdout_logfile_backups=<span class="number">10</span></span><br><span class="line">stdout_events_enabled=false</span><br><span class="line">stderr_logfile=/a/path</span><br><span class="line">stderr_logfile_maxbytes=<span class="number">1</span>MB</span><br><span class="line">stderr_logfile_backups=<span class="number">10</span></span><br><span class="line">stderr_events_enabled=false</span><br><span class="line">environment=A=<span class="string">"1"</span>,B=<span class="string">"2"</span></span><br><span class="line">serverurl=AUTO</span><br></pre></td></tr></table></figure><h2 id="eventlistener-x"><a href="#eventlistener-x" class="headerlink" title="[eventlistener:x]"></a>[eventlistener:x]</h2><p>以下是<code>[program:x]</code> 没有的参数</p><p><code>buffer_size</code></p><p>事件监听池事件队列缓存大小。满时，最早的事件会被遗弃。</p><p><code>events</code></p><p>监听器想要接收到的事件通知，以逗号分隔的事件类型名列表。</p><p><code>result_handler</code></p><p>默认值为<code>supervisor.dispatchers:default_handler</code></p><p><code>[eventlistener:x]</code>简单实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[eventlistener:theeventlistenername]</span><br><span class="line">command=/bin/eventlistener</span><br><span class="line">process_name=%(program_name)s_%(process_num)<span class="number">02</span>d</span><br><span class="line">numprocs=<span class="number">5</span></span><br><span class="line">events=PROCESS_STATE</span><br><span class="line">buffer_size=<span class="number">10</span></span><br><span class="line">directory=/tmp</span><br><span class="line">umask=<span class="number">022</span></span><br><span class="line">priority=<span class="number">-1</span></span><br><span class="line">autostart=true</span><br><span class="line">autorestart=unexpected</span><br><span class="line">startsecs=<span class="number">1</span></span><br><span class="line">startretries=<span class="number">3</span></span><br><span class="line">exitcodes=<span class="number">0</span>,<span class="number">2</span></span><br><span class="line">stopsignal=QUIT</span><br><span class="line">stopwaitsecs=<span class="number">10</span></span><br><span class="line">stopasgroup=false</span><br><span class="line">killasgroup=false</span><br><span class="line">user=chrism</span><br><span class="line">redirect_stderr=false</span><br><span class="line">stdout_logfile=/a/path</span><br><span class="line">stdout_logfile_maxbytes=<span class="number">1</span>MB</span><br><span class="line">stdout_logfile_backups=<span class="number">10</span></span><br><span class="line">stdout_events_enabled=false</span><br><span class="line">stderr_logfile=/a/path</span><br><span class="line">stderr_logfile_maxbytes=<span class="number">1</span>MB</span><br><span class="line">stderr_logfile_backups=<span class="number">10</span></span><br><span class="line">stderr_events_enabled=false</span><br><span class="line">environment=A=<span class="string">"1"</span>,B=<span class="string">"2"</span></span><br><span class="line">serverurl=AUTO</span><br></pre></td></tr></table></figure><h2 id="rpcinterface-x"><a href="#rpcinterface-x" class="headerlink" title="[rpcinterface:x]"></a><code>[rpcinterface:x]</code></h2><p><code>[rpcinterface:x]</code>简单实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[rpcinterface:another]</span><br><span class="line">supervisor.rpcinterface_factory = my.package:make_another_rpcinterface</span><br><span class="line">retries = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>就写到这吧，翻译文档真的是一件很无聊的事情啊！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近期在看supervisor相关的知识，这里简单的对配置文件里的一些参数做些简单的翻译，加强自己的记忆的同时，方便后续查看！&lt;/p&gt;
    
    </summary>
    
      <category term="supervisor" scheme="https:/fangchichen.github.io/categories/supervisor/"/>
    
    
      <category term="supervisor" scheme="https:/fangchichen.github.io/tags/supervisor/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + GitHub Paging 快速搭建个人博客</title>
    <link href="https:/fangchichen.github.io/2018/07/13/hexo+githubpaging/"/>
    <id>https:/fangchichen.github.io/2018/07/13/hexo+githubpaging/</id>
    <published>2018-07-13T09:13:36.232Z</published>
    <updated>2018-07-13T09:13:36.232Z</updated>
    
    <content type="html"><![CDATA[<p>近段时间觉得应该把自己学习到的东西进行个总结，同时也方便自己以后回顾，所以心血来潮想搭建一个博客，顺势就把搭建的过程记录一下，作为自己的第一篇博客吧，希望以后能坚持下去。</p><a id="more"></a><h3 id="系统环境说明"><a href="#系统环境说明" class="headerlink" title="系统环境说明"></a>系统环境说明</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MacOS: <span class="number">10.13</span><span class="number">.5</span></span><br><span class="line">Nodejs: <span class="number">10.6</span><span class="number">.0</span></span><br><span class="line">npm: <span class="number">6.1</span><span class="number">.0</span></span><br><span class="line">git: <span class="number">2.13</span><span class="number">.6</span></span><br></pre></td></tr></table></figure><p>Hexo依赖于Nodejs和npm，所以在开始之前先安装好Nodejs和npm</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>安装完毕之后，先初始化一个blog文件夹，作为后续项目的目录（我看到有些文档是让先git clone下来git上的repo，再在这个文件夹里hexo init，这样hexo会报错提示该文件夹不为空，所以这里我选择先init一个文件夹，而且，可以使用hexo的自动部署到github paging上，省去clone 远端库的过程）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo g <span class="comment"># 或者hexo generate</span></span><br><span class="line">hexo s <span class="comment"># 或者hexo server</span></span><br></pre></td></tr></table></figure><p>完成上述步骤后，我们就可以在<a href="http://localhost:4000/上查看到一个hello" target="_blank" rel="noopener">http://localhost:4000/上查看到一个hello</a> world的样本文章。</p><p>以下是我安装hexo的本地环境，通过hexo -v查看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">hexo-cli: <span class="number">1.1</span><span class="number">.0</span></span><br><span class="line">os: Darwin <span class="number">17.6</span><span class="number">.0</span> darwin x64</span><br><span class="line">http_parser: <span class="number">2.8</span><span class="number">.0</span></span><br><span class="line">node: <span class="number">10.6</span><span class="number">.0</span></span><br><span class="line">v8: <span class="number">6.7</span><span class="number">.288</span><span class="number">.46</span>-node<span class="number">.13</span></span><br><span class="line">uv: <span class="number">1.21</span><span class="number">.0</span></span><br><span class="line">zlib: <span class="number">1.2</span><span class="number">.11</span></span><br><span class="line">ares: <span class="number">1.14</span><span class="number">.0</span></span><br><span class="line">modules: <span class="number">64</span></span><br><span class="line">nghttp2: <span class="number">1.32</span><span class="number">.0</span></span><br><span class="line">napi: <span class="number">3</span></span><br><span class="line">openssl: <span class="number">1.1</span><span class="number">.0</span>h</span><br><span class="line">icu: <span class="number">62.1</span></span><br><span class="line">unicode: <span class="number">11.0</span></span><br><span class="line">cldr: <span class="number">33.1</span></span><br><span class="line">tz: <span class="number">2018</span>e</span><br></pre></td></tr></table></figure><h3 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h3><p>这里我得吐槽一下了，github paging会找不到hexo主题生成的一些css/js文件。最后我选择了next主题，可能是因为该主题特别火，所以该主题最新版可以很好的适配GitHub paging，省去了添加..nojekyll文件或是修改source/vendors为source/lib。如果使用了最新的next主题，仍然出现样式没有加载的情况，可以去网上找找以上方法去解决。</p><p>这里我们先去GitHub上下载next主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next.git</span><br></pre></td></tr></table></figure><p>然后修改上层目录里的_config.yml文件中theme字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>修改为下面这样，注意名字要与你下载的主题名称一致</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: hexo-theme-next</span><br></pre></td></tr></table></figure><p>然后通过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>就可以在本地查看主题是否更改了。</p><p>接下来就是配置GitHub paging了。</p><h3 id="GitHub-Paging设置"><a href="#GitHub-Paging设置" class="headerlink" title="GitHub Paging设置"></a>GitHub Paging设置</h3><p>首先你得有一个GitHub账号，并且配置好public key，然后你再新建一个repo，这里建议把Repository name设置成下面这样的样式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fangchichen.github.io. <span class="comment"># 重点是后面的github.io</span></span><br></pre></td></tr></table></figure><p>避免hexo主题一些css/js文件找不到的问题</p><p>建完repo后，我们就可以把文章部署在GitHub上了</p><p>这里有两种方式，接下来分别介绍</p><h3 id="文章部署"><a href="#文章部署" class="headerlink" title="文章部署"></a>文章部署</h3><p>第一种方式，就是用hexo的deploy命令去部署，要是用这种方式，首先得下载一个扩展</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后再来修改上面提到的_config.yml文件deploy字段如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">   type: git</span><br><span class="line">   repo: https://github.com/fangchichen/fangchichen.github.io.git  <span class="comment"># 这里就填上面你自己建立的repo的地址</span></span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure><p>这样你就可以用下面的命令将文章部署到GitHub上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>现在就通过<a href="https://fangchichen.github.io/这样的链接访问到你的文章了，有没有很激动（如果出现样式没加载出来的问题，请参考上面主题设置部分）。" target="_blank" rel="noopener">https://fangchichen.github.io/这样的链接访问到你的文章了，有没有很激动（如果出现样式没加载出来的问题，请参考上面主题设置部分）。</a></p><p>当然，如果你想换别的hexo主题，记得用下面的命令先清理掉之前的publish文件夹，然后重新生成一个并部署上去。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>第二种部署方式就跟git提交差不多了，先创建一个.deploy隐藏文件夹，再把远端的repo下载到本地</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">madir .deploy</span><br><span class="line">git clone https://github.com/fangchichen/fangchichen.github.io.git</span><br></pre></td></tr></table></figure><p>然后把hexo生成的public里面的内容全复制到下载下来的repo本地文件夹里面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp -R public/* .deploy/fangchichen.github.io</span><br><span class="line">cd .deploy/fangchichen.github.io</span><br><span class="line">git add .</span><br><span class="line">git commit -m “update”</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>如果觉得麻烦，可以写个脚本来执行上面的操作，省去每次更新文章都得再来一遍。</p><p>到这里搭建个人博客就基本上完成了，生下来就介绍一些hexo常用命令</p><h3 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h3><p>创建一个新的文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><p>未完待续！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近段时间觉得应该把自己学习到的东西进行个总结，同时也方便自己以后回顾，所以心血来潮想搭建一个博客，顺势就把搭建的过程记录一下，作为自己的第一篇博客吧，希望以后能坚持下去。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https:/fangchichen.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https:/fangchichen.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>docker学习笔记</title>
    <link href="https:/fangchichen.github.io/2018/07/13/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https:/fangchichen.github.io/2018/07/13/docker学习笔记/</id>
    <published>2018-07-13T06:55:38.000Z</published>
    <updated>2018-07-13T09:36:52.939Z</updated>
    
    <content type="html"><![CDATA[<p>最近才想着学习学习docker，这里也算是把学习的过程给记录下来，等到要用到的时候，可以节省一些学习的时间。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近才想着学习学习docker，这里也算是把学习的过程给记录下来，等到要用到的时候，可以节省一些学习的时间。&lt;/p&gt;
    
    </summary>
    
      <category term="docker" scheme="https:/fangchichen.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https:/fangchichen.github.io/tags/docker/"/>
    
  </entry>
  
</feed>
